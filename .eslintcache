[{"/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/index.js":"1","/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/App.js":"2","/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/components/SimpleInput.js":"3","/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/components/BasicForm.js":"4","/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/Hooks/use-forminput.js":"5","/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/Hooks/use-formstyle.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":246,"mtime":1624346540873,"results":"9","hashOfConfig":"8"},{"size":2126,"mtime":1624347325434,"results":"10","hashOfConfig":"8"},{"size":4693,"mtime":1624345978973,"results":"11","hashOfConfig":"8"},{"size":1347,"mtime":1624346083990,"results":"12","hashOfConfig":"8"},{"size":179,"mtime":1624345479459,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"loghju",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/index.js",[],"/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/App.js",[],["28","29"],"/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/components/SimpleInput.js",[],"/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/components/BasicForm.js",["30"],"import useFormInput from \"../Hooks/use-forminput\";\nimport useFormStyle from \"../Hooks/use-formstyle\";\n\n\nconst BasicForm = (props) => {\n  //üî† first name\n\n  function validateFormatFName(firstName) {\n    return firstName.trim() !== \"\";\n  }\n  \n\n  const {\n    value: firstName,\n    hasError: enteredFnameHasError,\n    isValid: firstNameIsValid,\n    valueChangeHandler: fnameChangeHandler,\n    valueBlurHandler: fnameBlurHandler,\n    reset: fnameReset,\n  } = useFormInput(validateFormatFName);\n\n  //üî† lastname\n  function validateFormatLastName(lastName) {\n    return lastName.trim() !== \"\";\n  }\n\n  const {\n    value: lastName,\n    hasError: lastNameHasError,\n    isValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: lastNameReset,\n  } = useFormInput(validateFormatLastName);\n\n  //üî† email üìß\n  function validateFormatemailInput(emailInput) {\n    const regex = /^([\\w\\.\\-_]+)?\\w+@[\\w-_]+(\\.\\w+){1,}$/gim;\n    return emailInput.match(regex);\n  }\n\n  const {\n    value: emailInput,\n    hasError: emailInputHasError,\n    isValid: emailInputIsValid,\n    valueChangeHandler: emailInputChangeHandler,\n    valueBlurHandler: emailInputBlurHandler,\n    reset: emailInputReset,\n  } = useFormInput(validateFormatemailInput);\n\n  //üî† password üîê\n  function validateFormatPasswordInput(passwordInput) {\n    const regexPassword = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm;\n    return passwordInput.match(regexPassword);\n  }\n\n  const {\n    value: passwordInput,\n    hasError: passwordInputHasError,\n    isValid: passwordInputIsValid,\n    valueChangeHandler: passwordInputChangeHandler,\n    valueBlurHandler: passwordInputBlurHandler,\n    reset: passwordInputReset,\n  } = useFormInput(validateFormatPasswordInput);\n\n  //  form control üéõÔ∏è\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailInputIsValid && passwordInputIsValid) {\n    formIsValid = true;\n  }\n\n\n  // submit handler control üíú\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if (!firstNameIsValid && !lastNameIsValid && !emailInputIsValid && !passwordInputIsValid ) {\n      return;\n    }\n\n    // show values\n    console.log(\"Full name: \", firstName, \" \", lastName);\n    console.log(\"Email: \", emailInput);\n\n    // reset first name\n    fnameReset();\n    lastNameReset();\n    emailInputReset();\n    passwordInputReset();\n  }\n\n  const [firstNameInputClasses] = useFormStyle(enteredFnameHasError);\n  const [lastNameInputClasses] = useFormStyle(lastNameHasError);\n  const [emailInputClasses] = useFormStyle(emailInputHasError);\n  const [passwordInputClasses] = useFormStyle(passwordInputHasError);\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={firstName}\n            onChange={fnameChangeHandler}\n            onBlur={fnameBlurHandler}\n          />\n\n          {enteredFnameHasError && (\n            <p style={{ color: \"red\" }}>Field Must not be empty</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={lastName}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && (\n            <p style={{ color: \"red\" }}>Last name Must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={emailInput}\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n        />\n        {emailInputHasError && (\n          <p style={{ color: \"red\" }}>Email is not valid</p>\n        )}\n      </div>\n      <div className={passwordInputClasses}>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={passwordInput}\n          onChange={passwordInputChangeHandler}\n          onBlur={passwordInputBlurHandler}\n          \n        />\n        {passwordInputHasError && (\n          <p style={{ color: \"red\" }}>Password should have at least 8 characters,at least 1 uppercase letter, 1 lowercase letter, and 1 number</p>\n        )}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/Hooks/use-forminput.js",[],"/media/sayan/Sayan2/MyLearning/React_maximallian/React-forms-&-userinput/forms&custom_hooks/01-starting-project/src/Hooks/use-formstyle.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":38,"column":25,"nodeType":"37","messageId":"38","endLine":38,"endColumn":26,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["42","43"],"no-global-assign","no-unsafe-negation",{"messageId":"44","fix":"45","desc":"46"},{"messageId":"47","fix":"48","desc":"49"},"removeEscape",{"range":"50","text":"51"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"52","text":"53"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[936,937],"",[936,936],"\\"]